df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
preproc<-preProcess(data3,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data2$Delivery_Term,
cutoff = 0.80)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
preproc<-preProcess(data3,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data2$Delivery_Term,
cutoff = 0.82)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
preproc
data3%>%select(-c(colnames(df_preproc)))
df_preproc<-NULL
preproc<-preProcess(data3,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data2$Delivery_Term,
cutoff = 0.81)
data3%>%select(-c(colnames(df_preproc)))
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
preproc<-preProcess(data3,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data2$Delivery_Term,
cutoff = 0.82)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
preproc<-preProcess(data3,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data2$Delivery_Term,
cutoff = 0.85)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
colnames(df_preproc)
microplastics <- c("N6","N66","PE","PET","PU", "PP","ABS", "SBR", "PC", "PVC")
formula <- as.formula(paste("Delivery_Term ~", paste(microplastics, collapse = " + ")))
model=NULL
formula
model <- glm(formula, data = df_preproc, family = binomial)
summary(model)
library(car)
vif(model)
# Calculate adjusted odds ratios (AOR) and 95% confidence intervals
exp_coef <- exp(coef(model)) # Adjusted Odds Ratios
confint_model <- confint(model) # Confidence intervals
exp_confint <- exp(confint_model) # Exponentiate confidence intervals
# Combine into a table
aor_table <- cbind(Adjusted_Odds_Ratio = exp_coef,
Lower_CI = exp_confint[, 1],
Upper_CI = exp_confint[, 2])
# Print the table
print(aor_table)
library(knitr)
kable(aor_table,digits = 2)
summary(model)
# Load necessary libraries
library(tidyverse)
library(car)  # For VIF calculation
# Convert Delivery_Term to a factor with "Term" as the reference level
data$Delivery_Term <- factor(data$Delivery_Term, levels = c("Term", "Preterm"))
data2<-data%>%select(TissueID,Delivery_Term,PriorPretermBirth.Yes)%>%distinct_all()
# Ensure Prior.preterm.birth_Yes is a factor
data$PriorPretermBirth.Yes <- factor(data$PriorPretermBirth.Yes, levels = c(0, 1))
class(data$PriorPretermBirth.Yes)
unique(df_clean_long$microplastic)
data$Ethnicity_Race_Hispanic_White)
data$Ethnicity_Race_Non.Hispanic_Black
data$Ethnicity_Race_Non.Hispanic_White
data$Hypertension_Yes
data$Type.of.labor_Spontaneous
data$Preeclampsia_Yes
data$PPROM_Yes
data$Other.Medically.Indicated_Yes
vec<-c("Ethnicity_Race_Hispanic_White",
"Ethnicity_Race_Non.Hispanic_Black",
"Ethnicity_Race_Non.Hispanic_White",
"Hypertension_Yes",
"Type.of.labor_Spontaneous",
"Preeclampsia_Yes",
"PPROM_Yes",
"Other.Medically.Indicated_Yes","SDI_score","APGAR.at.1.minute")
data4<-data%>%mutate(across(c(Ethnicity_Race_Hispanic_White,
Ethnicity_Race_Non.Hispanic_Black,
Ethnicity_Race_Non.Hispanic_White,
Hypertension_Yes,
Type.of.labor_Spontaneous,
Preeclampsia_Yes,
PPROM_Yes,
Other.Medically.Indicated_Yes),factor))
#number
data$SDI_score
data$APGAR.at.1.minute
# Include Prior Preterm Birth as a covariate
covariates <- c(microplastics, "PriorPretermBirth.Yes",vec)
covariates
# Construct the formula for logistic regression
formula <- as.formula(paste("Delivery_Term ~", paste(covariates, collapse = " + ")))
formula
data4
# Include Prior Preterm Birth as a covariate
covariates <- c(microplastics, "PriorPretermBirth.Yes",vec)
covariates
# Construct the formula for logistic regression
formula <- as.formula(paste("Delivery_Term ~", paste(covariates, collapse = " + ")))
formula
# # Combine into a table
# aor_table <- data.frame(
#   Variable = names(exp_coef),
#   Adjusted_Odds_Ratio = exp_coef,
#   Lower_CI = exp_confint[, 1],
#   Upper_CI = exp_confint[, 2]
# )
#
# # Print the AOR table
# kable(aor_table,digits = 2)
data4
preproc<-preProcess(data4,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data4$Delivery_Term,
cutoff = 0.85)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data4)
glimpse(df_preproc)
glimpse(df_preproc)
df_preproc
df_preproc$Preterm.Labor_Yes
df_preproc$PriorPretermBirth.Yes
# Convert Delivery_Term to a factor with "Term" as the reference level
data$Delivery_Term <- factor(data$Delivery_Term, levels = c("Term", "Preterm"))
data2<-data%>%select(TissueID,Delivery_Term,PriorPretermBirth.Yes)%>%distinct_all()
data2
data$PriorPretermBirth.Yes
data$PriorPretermBirth
data2<-data%>%mutate(PriorPretermBirth=PriorTermBirth>0)
# Load the dataset
data <- read.csv("count_tab_log1p.csv")
data2$PriorPretermBirth.Yes
# Convert Delivery_Term to a factor with "Term" as the reference level
data$Delivery_Term <- factor(data$Delivery_Term, levels = c("Term", "Preterm"))
data2<-data%>%mutate(PriorPretermBirth=PriorTermBirth>0)
data2$PriorPretermBirth.Yes
data2<-data%>%mutate(PriorPretermBirth=PriorTermBirth>0)
data2$PriorPretermBirth.Yes
# Load the dataset
data <- read.csv("count_tab_log1p.csv")
# Convert Delivery_Term to a factor with "Term" as the reference level
data$Delivery_Term <- factor(data$Delivery_Term, levels = c("Term", "Preterm"))
data2<-data%>%mutate(PriorPretermBirth.Yes=PriorTermBirth>0)
data2$PriorPretermBirth.Yes
data2<-data2%>%select(TissueID,Delivery_Term,PriorPretermBirth.Yes)%>%distinct_all()
# Load the dataset
data <- read.csv("count_tab_log1p.csv")
# Convert Delivery_Term to a factor with "Term" as the reference level
data$Delivery_Term <- factor(data$Delivery_Term, levels = c("Term", "Preterm"))
data<-data%>%mutate(PriorPretermBirth.Yes=PriorTermBirth>0)
data$PriorPretermBirth.Yes
data<-data%>%select(TissueID,Delivery_Term,PriorPretermBirth.Yes)%>%distinct_all()
data$Ethnicity_Race_Hispanic_White)
data$Ethnicity_Race_Non.Hispanic_Black
data$Ethnicity_Race_Non.Hispanic_White
data$Hypertension_Yes
data$Type.of.labor_Spontaneous
data$Preeclampsia_Yes
data$PPROM_Yes
data$Other.Medically.Indicated_Yes
# Load the dataset
data <- read.csv("count_tab_log1p.csv")
# Convert Delivery_Term to a factor with "Term" as the reference level
data$Delivery_Term <- factor(data$Delivery_Term, levels = c("Term", "Preterm"))
data<-data%>%mutate(PriorPretermBirth.Yes=PriorTermBirth>0)
data$PriorPretermBirth.Yes
data$Ethnicity_Race_Hispanic_White)
data$Ethnicity_Race_Non.Hispanic_Black
data$Ethnicity_Race_Non.Hispanic_White
data$Hypertension_Yes
data$Type.of.labor_Spontaneous
data$Preeclampsia_Yes
data$PPROM_Yes
data$Other.Medically.Indicated_Yes
vec<-c("Ethnicity_Race_Hispanic_White",
"Ethnicity_Race_Non.Hispanic_Black",
"Ethnicity_Race_Non.Hispanic_White",
"Hypertension_Yes",
"Type.of.labor_Spontaneous",
"Preeclampsia_Yes",
"PPROM_Yes",
"Other.Medically.Indicated_Yes","SDI_score","APGAR.at.1.minute")
data4<-data%>%mutate(across(c(Ethnicity_Race_Hispanic_White,
Ethnicity_Race_Non.Hispanic_Black,
Ethnicity_Race_Non.Hispanic_White,
Hypertension_Yes,
Type.of.labor_Spontaneous,
Preeclampsia_Yes,
PPROM_Yes,
Other.Medically.Indicated_Yes),factor))
#number
data$SDI_score
data$APGAR.at.1.minute
data4
# Include Prior Preterm Birth as a covariate
covariates <- c(microplastics, "PriorPretermBirth.Yes",vec)
covariates
# Construct the formula for logistic regression
formula <- as.formula(paste("Delivery_Term ~", paste(covariates, collapse = " + ")))
formula
data4
preproc<-preProcess(data4,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data4$Delivery_Term,
cutoff = 0.85)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data4)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
data4%>%select(-c(colnames(df_preproc)))
colnames(df_preproc)
microplastics <- c("N6","N66","PE","PET","PU", "PP","ABS", "SBR", "PC", "PVC")
formula <- as.formula(paste("Delivery_Term ~", paste(microplastics, collapse = " + ")))
model=NULL
formula
model <- glm(formula, data = df_preproc, family = binomial)
summary(model)
covariates
# Construct the formula for logistic regression
formula <- as.formula(paste("Delivery_Term ~", paste(covariates, collapse = " + ")))
formula
# Fit the logistic regression model
model <- glm(formula, data = data, family = binomial)
# Display the model summary
summary(model)
covariates
formula
# Fit the logistic regression model
model <- glm(formula, data = df_preproc, family = binomial)
vec<-c("Ethnicity_Race_Hispanic_White",
"Ethnicity_Race_Non.Hispanic_Black",
"Ethnicity_Race_Non.Hispanic_White",
"Hypertension_Yes",
"Type.of.labor_Spontaneous",
"Preeclampsia_Yes",
"PPROM_Yes",
"Other.Medically.Indicated_Yes",
# "SDI_score",
"APGAR.at.1.minute")
data4<-data%>%mutate(across(c(Ethnicity_Race_Hispanic_White,
Ethnicity_Race_Non.Hispanic_Black,
Ethnicity_Race_Non.Hispanic_White,
Hypertension_Yes,
Type.of.labor_Spontaneous,
Preeclampsia_Yes,
PPROM_Yes,
Other.Medically.Indicated_Yes),factor))
#number
data$SDI_score
data$APGAR.at.1.minute
data4
# Include Prior Preterm Birth as a covariate
covariates <- c(microplastics, "PriorPretermBirth.Yes",vec)
covariates
# Construct the formula for logistic regression
formula <- as.formula(paste("Delivery_Term ~", paste(covariates, collapse = " + ")))
formula
data4
preproc<-preProcess(data4,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data4$Delivery_Term,
cutoff = 0.85)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data4)
glimpse(df_preproc)
data4%>%select(-c(colnames(df_preproc)))
colnames(df_preproc)
microplastics <- c("N6","N66","PE","PET","PU", "PP","ABS", "SBR", "PC", "PVC")
formula <- as.formula(paste("Delivery_Term ~", paste(microplastics, collapse = " + ")))
model=NULL
# Include Prior Preterm Birth as a covariate
covariates <- c(microplastics, "PriorPretermBirth.Yes",vec)
covariates
# Construct the formula for logistic regression
formula <- as.formula(paste("Delivery_Term ~", paste(covariates, collapse = " + ")))
formula
# Fit the logistic regression model
model <- glm(formula, data = df_preproc, family = binomial)
summary(model)
library(car)
vif(model)
# Calculate adjusted odds ratios (AOR) and 95% confidence intervals
exp_coef <- exp(coef(model)) # Adjusted Odds Ratios
confint_model <- confint(model) # Confidence intervals
exp_confint <- exp(confint_model) # Exponentiate confidence intervals
# Combine into a table
aor_table <- cbind(Adjusted_Odds_Ratio = exp_coef,
Lower_CI = exp_confint[, 1],
Upper_CI = exp_confint[, 2])
# Print the table
print(aor_table)
library(knitr)
kable(aor_table,digits = 2)
glimpse(df_preproc)
# Load required packages
library(ggplot2)
library(dplyr)
# Convert your matrix "aor_table" to a data frame
df_forest <- as.data.frame(aor_table)
df_forest
df_forest%>%filter(Adjusted_Odds_Ratio>1000)
df_forest%>%filter(Adjusted_Odds_Ratio<1000)
# Convert your matrix "aor_table" to a data frame
df_forest <- as.data.frame(aor_table)%>%filter(Adjusted_Odds_Ratio<1000)
# Create a new column for variable names, drawn from row names
df_forest$Variable <- rownames(aor_table)
# Optional: remove the intercept row if you don’t want it in the forest plot
df_forest <- df_forest %>%
filter(Variable != "(Intercept)")
# Optional: remove the intercept row if you don’t want it in the forest plot
df_forest <- df_forest %>% mutate(Variable=rownames(df_forest))%>%
filter(Variable != "(Intercept)")
# Reorder variables so they appear in a neat vertical order
# (last variable at the bottom)
df_forest$Variable <- factor(df_forest$Variable, levels = rev(df_forest$Variable))
# Build the forest plot
ggplot(df_forest, aes(x = Adjusted_Odds_Ratio,
y = Variable)) +
geom_point(shape = 18, size = 3) +
geom_errorbarh(aes(xmin = Lower_CI, xmax = Upper_CI),
height = 0.2) +
# Add a vertical line at x=1 (no effect line)
geom_vline(xintercept = 1, linetype = "dashed") +
# Usually we use a log scale for OR
scale_x_log10() +
# Labels and a clean theme
xlab("Adjusted Odds Ratio (log scale)") +
ylab("") +
theme_bw() +
theme(
panel.border = element_blank(),
axis.line.x = element_line(),
axis.line.y = element_line()
)
# Construct the formula for logistic regression
formula <- as.formula(paste("Delivery_Term ~", paste(microplastics, collapse = " + ")))
formula
# Fit the logistic regression model
model <- glm(formula, data = data, family = binomial)
# Display the model summary
summary(model)
# Check model diagnostics
library(car)
vif(model) # Variance Inflation Factor to check multicollinearity
#################################################################################
# Calculate adjusted odds ratios (AOR) and 95% confidence intervals
exp_coef <- exp(coef(model)) # Adjusted Odds Ratios
confint_model <- confint(model) # Confidence intervals
exp_confint <- exp(confint_model) # Exponentiate confidence intervals
# Combine into a table
aor_table <- cbind(Adjusted_Odds_Ratio = exp_coef,
Lower_CI = exp_confint[, 1],
Upper_CI = exp_confint[, 2])
# Print the table
print(aor_table)
complete.cases(data)
glimpse(data)
data<-data%>%mutate(PriorPretermBirth.Yes=gsub(0,FALSE,PriorPretermBirth.Yes),
PriorPretermBirth.Yes=gsub(1,TRUE,PriorPretermBirth.Yes),
PriorPretermBirth.Yes=as.logical(PriorPretermBirth.Yes),
SGA=gsub("N",FALSE,SGA),
LGA=gsub("Y",TRUE,SGA),
SGA=gsub("N",FALSE,LGA),
LGA=gsub("Y",TRUE,LGA),
SGA=as.logical(SGA),
LGA=as.logical(LGA))
glimpse(data)
library(caret)
library(tidyverse)
data2<- data %>%
mutate(
across(
.cols = where(~ all(.x %in% c(0, 1), na.rm = TRUE)),
.fns  = as.logical
)
)
glimpse(data2)
data2
data3<-data2%>%select(Delivery_Term,PE:CumulativeMNPs)
preproc<-preProcess(data3,
method = c("center",
"scale",
"nzv",
"zv",
"corr"),
verbose = T,
outcome = data2$Delivery_Term,
cutoff = 0.85)
preproc
df_preproc<-NULL
df_preproc<-predict(preproc,data3)
glimpse(df_preproc)
data3%>%select(-c(colnames(df_preproc)))
colnames(df_preproc)
microplastics <- c("N6","N66","PE","PET","PU", "PP","ABS", "SBR", "PC", "PVC")
formula <- as.formula(paste("Delivery_Term ~", paste(microplastics, collapse = " + ")))
model=NULL
formula
model <- glm(formula, data = df_preproc, family = binomial)
summary(model)
library(car)
vif(model)
# Calculate adjusted odds ratios (AOR) and 95% confidence intervals
exp_coef <- exp(coef(model)) # Adjusted Odds Ratios
confint_model <- confint(model) # Confidence intervals
exp_confint <- exp(confint_model) # Exponentiate confidence intervals
# Combine into a table
aor_table <- cbind(Adjusted_Odds_Ratio = exp_coef,
Lower_CI = exp_confint[, 1],
Upper_CI = exp_confint[, 2])
# Print the table
print(aor_table)
library(knitr)
kable(aor_table,digits = 2)
# Convert your matrix "aor_table" to a data frame
df_forest <- as.data.frame(aor_table)%>%filter(Adjusted_Odds_Ratio<1000)
# Create a new column for variable names, drawn from row names
df_forest$Variable <- rownames(aor_table)
# Optional: remove the intercept row if you don’t want it in the forest plot
df_forest <- df_forest %>% mutate(Variable=rownames(df_forest))%>%
filter(Variable != "(Intercept)")
# Reorder variables so they appear in a neat vertical order
# (last variable at the bottom)
df_forest$Variable <- factor(df_forest$Variable, levels = rev(df_forest$Variable))
# Build the forest plot
ggplot(df_forest, aes(x = Adjusted_Odds_Ratio,
y = Variable)) +
geom_point(shape = 18, size = 3) +
geom_errorbarh(aes(xmin = Lower_CI, xmax = Upper_CI),
height = 0.2) +
# Add a vertical line at x=1 (no effect line)
geom_vline(xintercept = 1, linetype = "dashed") +
# Usually we use a log scale for OR
scale_x_log10() +
# Labels and a clean theme
xlab("Adjusted Odds Ratio (log scale)") +
ylab("") +
theme_bw() +
theme(
panel.border = element_blank(),
axis.line.x = element_line(),
axis.line.y = element_line()
)
